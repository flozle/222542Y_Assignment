@page
@model _222542Y_Assignment.Pages.LoginModel
@{
	ViewData["Title"] = "Login";
}

@using Microsoft.Extensions.Options
@using Authentication.Model
@inject IOptions<GoogleCaptchaConfig> GoogleCaptchaConfig

<div class="container mt-5">

	<div class="row justify-content-center align-items-center">

		<div class="col-sm-12 col-md-12 col-lg-4">
			<h1 class="mb-3">Login </h1>

			<form method="post">
				<div asp-validation-summary="All" class="text-danger"></div>
				<input type="hidden" id="LoginViewModelToken" asp-for="LModel.Token" />

				<div class="mb-3">
					<label class="form-label" asp-for="LModel.Email">Email Address</label>
					<input type="Text" asp-for="LModel.Email" class="form-control" />
					<span asp-validaton-for="LModel.Email" class="text-danger"></span>
				</div>

				<div class="mb-3">
					<label class="form-label" asp-for="LModel.Password">Password</label>
					<input type="Text" asp-for="LModel.Password" class="form-control" />
					<span asp-validaton-for="LModel.Password" class="text-danger"></span>
				</div>

				<div class="mb-3 form-check">
					<input type="checkbox" asp-for="LModel.RememberMe" class="form-check-input" />
					<label class="form-check-label" asp-for="LModel.RememberMe">Remember Me?</label>
				</div>

				<div class="mb-3">
					<button type="submit" class="btn btn-primary">Login</button>
				</div>
			</form>
		</div>
	</div>
</div>


<script src="https://www.google.com/recaptcha/api.js?render=@GoogleCaptchaConfig.Value.SiteKey"></script>
<script>
	function test() {
		grecaptcha.ready(function () {
			grecaptcha.execute('@GoogleCaptchaConfig.Value.SiteKey', { action: 'submit' }).then(function (token) {
				// Add your logic to submit to your backend server here.
				console.log(token)
				document.getElementById("LoginViewModelToken").value = token;
			});
		})
	}

	setInterval(test, 115000);

	window.onload = function () {
		test();
	};
</script>